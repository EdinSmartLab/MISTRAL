;-------------------------------------------------------------------------------
; Example parameter file for FSI simulations
; This file contains all possible parameters. When actually running something,
; you don't need to have all of them; all have their defaults which are loaded
; if a value is not found.
; When adding new parameters, please keep in mind to add them here.
;-------------------------------------------------------------------------------

; Define the resolution
[Resolution]
nx=64;
ny=64;
nz=64;

[Incompressibility]
;projection=poisson;
;projection=ACM;
c_0=10.0;

[Time]
; final time
Tmax=2.0;
; maximum number of time steps. if not set, unlimited
; nt=;
; Time integration method for Fluid (AB2, RK2, Euler, FSI_AB2_iteration, 
; FSI_AB2_staggered, FSI_AB2_semiimplicit)
iTimeMethodFluid=RK2;
CFL=0.25;
; fix time step (no matter what)
dt_fixed=;
; semi-fix time step (cannot be larger than dt_max but may well be smaller)
dt_max=;

[ReynoldsNumber]
nu=1.0e-2; nu is the inverse of Re if properly scaled


[InitialCondition]
; currently the follwing is available: "VortexRing", "turbulence", "MeanFlow"
; "quiescent"  to retake a backup: "backup::file.h5"
; the option "infile" requires specifying "file_ux=ux.h5", "file_uy=uy.h5",....
inicond=quiescent;
file_ux=none; active only when inicond=infile;
file_uy=none;
file_uz=none;


[Penalization]
; use penalization method or not? (superseeds following parameters)
iPenalization=1;
; does the obstacle move?
iMoving=0;
; which mask to set? (sphere, Flapper, Insect, noncircular_cylinder)
; note noncircular_cylinder reads in shape.in
iMask=sphere;
; how to smoothe the mask (standard is "erf")
iSmoothing=erf;
; penalization parameter
eps=1.0e-1;
; cavity around the domain? (this is independent of iMask)
; note this may be in conflict with mean flow forcing
; (use iCavity=yes; but set iMeanFlow=0;)
iCavity=no;
; cavity wall thickness in gridpoints
; note due to periodicity, effective thickness is twice that value
cavity_size=0;
; compute forces/toqrues or dont?
compute_forces=1;
; use unsteady corrections?
unst_corrections=0;
; channel walls? (allowed: no, xy, xz, turek)
iChannel=no;
thick_wall=0.2;
pos_wall=0.3;

[Geometry]
; domain size
xl=2.0;
yl=2.0;
zl=2.0;
Size=0.5; generic size parameter
; Position of obstacle (not used for insects)
x0=1.0;
y0=1.0;
z0=1.0;


[Insects]
; Wing (types: rectangular, TwoEllipses, drosophila, drosophila_mutated,
; drosophila_sandberg, drosophila_maeda, flapper_sane)
WingShape=drosophila; 
b_top=0.1; if WingShape=TwoEllipses, that's thickness of the forward one
b_bot=0.3; if WingShape=TwoEllipses, that's thickness of the backward one
L_chord=1.0;
L_span=1.0;
WingThickness=; default thickness is 4*dx
x_pivot_r=0.05 -0.2165 0.0; (vector) position of right wing in body system
x_pivot_l=0.05 +0.2165 0.0; (vector) position of left wing in body system
; wing motion protocolls (we allow asymmetric flapping)
; (types: Drosophila_hovering_fry, Drosophila_hovering_maeda, flapper_sane, 
; flapper_dickinson, takeoff, simplified, from_file, none)
FlappingMotion_right=Drosophila_hovering_fry; 
FlappingMotion_left=Drosophila_hovering_fry; 
; if flappingmotion=="from_file", which file to use?
infile=motion.in; 
; Body (types: ellipsoid, drosophila, nobody)
BodyType=drosophila; 
HasEye=no;
HasHead=no;
RightWing=yes;
LeftWing=yes;
b_body=0.2;
L_body=1.0;
R_head=0.20;
R_eye=0.075;
x_head=0.4 0.0 0.0; (vector) 
x_eye_r=; (vector) 
x_eye_l=; (vector) 
; motion of the body: (types: fixed, wheeling, hovering, flapper, takeoff)
BodyMotion=hovering;
distance_from_sponge=1.0; used for BodyMotion=hovering only
; Takeoff
x_takeoff=2.0;
z_takeoff=2.3;
mass_solid=54.414118839786745;
gravity=-0.055129281110537755;
ilegs=1;
anglegsend=0.7853981633974483;
kzlegsmax=64.24974647375242;
dzlegsmax=0.2719665271966527;
t0legs=0.13643141797265643;
tlinlegs=0.3547216867289067;
; Stroke plane angle in radians. Only for takeoff!
eta_stroke=-0.488692190558412;
; wing inertia tensor (used to compute inertial power)
Jxx=0.0;
Jyy=0.0;
Jzz=0.0;
Jxy=0.0;

[MeanFlow]
; type of mean flow (free/constant/dynamic)
; free: do nothing particular about the mean flow
; fixed: fix mean flow to values given here
; dynamic: solve mean flow eqn for a given (domain-independent) fluid mass
iMeanFlow_x=dynamic;
iMeanFlow_y=fixed;
iMeanFlow_z=fixed;
; if "dynamic", this is the mass of the fluid
m_fluid=10.0;
; if "dynamic" and mean flow at t=0 is not zero, the forces are singular
; at the beginning. use the startup conditioner to avoid large accelerations in 
; mean flow at the beginning
iMeanFlowStartupConditioner=no;
tau_meanflow=0.0;
T_release_meanflow=0.0;
; if "fixed" then this is mean velocities:
ux=0.0;
uy=0.0;
uz=0.0;

[Saving]
; Time interval for saving fields
tsave=0.05d0;
; Number of hours between saving runtime backups
truntime=1.0;
; Maximum number of walltime hours allowed for simulation
wtimemax=100.0;
; keep only one period of snapshots? (assumes T=1.0 period time)
save_only_one_period=no;
; Time interval for saving integral quantities
tintegral=0.01;
; Save drag every itdrag time steps
itdrag=10;
; save beam (if in use) every itbeam time steps
itbeam=2;
; make a backup or dont
iDoBackup=0;
; save options for the fields
iSaveVelocity=1;
iSavePress=0;
iSaveVorticity=0;
iSaveMask=1;
iSaveSolidVelocity=0;
; do you want to save direct *.xmf files? useful for debugging or to look at
; a single field only
iSaveXMF=0;

[Dealiasing]
iDealias=1; 1=yes 0=no (you shouldn't use 0)

[DryRun]
; sometimes, it is useful just to save the mask and not even solve the fluid.
dry_run_without_fluid=no;

[PassiveScalar]
; on/off switch, superseeds all following
use_passive_scalar=0; 0=off, 1=on
; how many passive scalars?
n_scalars=1;
; diffusivity
kappa=0.01;
; penalization
eps_scalar=1.0e-4;
; initial condition for scalar dirstibutions
inicond_scalar=right_left_discontinuous;
; stop when the scalar fails?
stop_on_fail=yes;
; source term (dirichlet condition on scalar) cuboid_framed/cubiod/no
source_term=no;
; source term cuboid description:
source_xmin=;
source_xmax=;
source_ymin=;
source_ymax=;
source_zmin=;
source_zmax=;


[SolidModel]
; use solid model yes or no? (superseeds all following)
use_solid_model=yes;
; resolution
ns=32; 
; interpolation method
interp=linear;
; dimensionless density, stiffness and gravity
mue=0.0571;
eta=0.008;
gravity=0.00;
; damping coefficient
sigma=0.0;
; when is the beam released?
T_release=0.0;
tau=0.0;
; time marching algorithm
TimeMethodSolid=BDF2;
; Options for the embedding of the beam in the 3D domain, for the mask etc
; available options: 
; "fixed_middle" plate in the middle of domain bending in xy, z is height
; "pitching_middle" plate in the middle of domain bending in xy, z is height, imposed pitching
imposed_motion_leadingedge=swimmer;
f=1.0;
; spanwise length (chordwise is unity)
L_span=1.00;
; (half) beam thickness (centerline-interface)
t_beam=0.15;
; how mouch smoothing (in grid points)
N_smooth=3.0;
; cylinder at the leading edge?
has_cylinder=no;
R_cylinder=0.0;
; infinite span? (you still have to set L_span a bit smaller than zl)
infinite=no;
; shape of the plate (rectangular, fish)
plate_shape=fish;




